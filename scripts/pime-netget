#!/bin/bash

url="$1"
host=$(echo "$url" | sed -E 's_https?://([^/]+).*_\1_')
path=$(echo "$url" | sed -E 's_https?://[^/]+(/.*)?_\1_')
path=${path:-/}

tmp_response=$(mktemp)
tmp_body=$(mktemp)

{
    echo "GET $path HTTP/1.1"
    echo "Host: $host"
    echo "User-Agent: netget-pime/1.0"
    echo "Connection: close"
    echo
} | openssl s_client -quiet -connect "$host:443" 2>/dev/null > "$tmp_response"

header_end=$(grep -n -m 1 '^$' "$tmp_response" | cut -d: -f1)
if [ -z "$header_end" ]; then
    echo "Error: Invalid HTTP response (no headers found)." >&2
    rm -f "$tmp_response" "$tmp_body"
    exit 1
fi

content_length=$(sed -n 's/^Content-Length: //Ip' "$tmp_response" | tr -d '\r')
body_start=$((header_end + 1))

# Calculate byte offset of body
body_offset=$(awk -v n=$header_end 'NR <= n { bytes += length($0) + 1 } END { print bytes }' "$tmp_response")

if [ -n "$content_length" ]; then
    echo "Downloading ($content_length bytes):"
else
    echo "Downloading (unknown size):"
fi

dd if="$tmp_response" bs=1 skip="$body_offset" status=none |
{
    count=0
    bar_size=50
    while IFS= read -r -n1 c; do
        printf "%s" "$c" >> "$tmp_body"
        count=$((count + 1))
        if [ $((count % 1024)) -eq 0 ] && [ -n "$content_length" ]; then
            progress=$((count * bar_size / content_length))
            bar=$(printf "%-${bar_size}s" "" | tr ' ' '=' | cut -c1-$progress)
            printf "\r[%s>%*s] %3d%%" "$bar" $((bar_size - progress)) "" $((count * 100 / content_length))
        fi
    done
    echo
}

cat "$tmp_body"

rm -f "$tmp_response" "$tmp_body"
