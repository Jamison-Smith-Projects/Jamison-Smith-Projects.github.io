#!/bin/sh

PACKAGE_LIST_URL="https://jamisonsmith.is-a.dev/scripts/pimerepo/packages.json"
LOCAL_PACKAGE_LIST="$HOME/.pime/packages.json"

show_help() {
    cat <<EOF
Version: 1.0
Usage: pime install/uninstall PACKAGE or pime update

Arguments:
    install PACKAGE
    uninstall PACKAGE
    update

Options:
  --help            Show this help message and exit.
  -u                Updates this program.
EOF
}

update_packages() {
    echo "Updating package list..."
    mkdir -p "$(dirname "$LOCAL_PACKAGE_LIST")"
    if curl -fsSL "$PACKAGE_LIST_URL" -o "$LOCAL_PACKAGE_LIST"; then
        echo "Package list updated successfully."
    else
        echo "Failed to update package list." >&2
        exit 1
    fi
}

install_package() {
    pkg="$1"
    if [ ! -f "$LOCAL_PACKAGE_LIST" ]; then
        echo "Package list not found. Run 'pime update' first." >&2
        exit 1
    fi

    url=$(grep -o "\"$pkg\"[ ]*:[ ]*\"[^\"]*\"" "$LOCAL_PACKAGE_LIST" | sed -E "s/\"$pkg\"[ ]*:[ ]*\"(.*)\"/\1/")
    
    if [ -z "$url" ]; then
        echo "Package '$pkg' not found." >&2
        exit 1
    fi

    echo "Installing $pkg from $url"
    tmpfile=$(mktemp)
    if curl -fsSL "$url" -o "$tmpfile"; then
        chmod +x "$tmpfile"
        sh "$tmpfile"
        rm "$tmpfile"
        echo "$pkg installed."
    else
        echo "Failed to download installer." >&2
        exit 1
    fi
}

uninstall_package() {
    echo "Uninstall logic not implemented yet."
    # Optionally store installed packages and write uninstallers
}

update_bootstrapper() {
    cd /home/$USER/
    mkdir .pimebin
    cd .pimebin
    curl -lo pime-updater https://jamisonsmith.is-a.dev/scripts/updaters/pime-updater
    chmod +x pime-updater
    sudo ./pime-updater
    rm -rf .pimebin
    exit 0
}
# Main handler
case "$1" in
    --help)
        show_help
        ;;
    update)
        update_packages
        ;;
    install)
        if [ -z "$2" ]; then
            echo "Error: Missing package name for install." >&2
            exit 1
        fi
        install_package "$2"
        ;;
    uninstall)
        if [ -z "$2" ]; then
            echo "Error: Missing package name for uninstall." >&2
            exit 1
        fi
        uninstall_package "$2"
        ;;
    -u)
        update_bootstrapper
        ;;
    *)
        echo "Error: Unknown command '$1'" >&2
        show_help
        exit 1
        ;;
esac
